{"version":3,"sources":["view/components/Login.js","view/components/Star.js","view/components/Logs.js","view/components/Setting.js","view/Home.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","email","code","showCaptchaInput","showToast","tips","visible","msg","type","sendTxt","sendBtnDisabled","_this2","this","arguments","length","undefined","setState","setTimeout","_this3","test","showTips","axios","post","then","_ref","data","setInterval","parseInt","key","target","_ref2","value","Object","objectSpread","_this4","_ref3","body","console","log","access_token","props","loginOk","window","location","reload","react_default","a","createElement","className","style","height","overflow","build_packages","left","leftOnClick","toggle","bind","vcode","with","onChange","onChangeInput","placeholder","disabled","onClick","onSendCapthca","padding","marginTop","onLogin","icon","show","Component","connect_status","Star","star_css","tipTxt","timeout","checkShadowSocksStatus","connecting_time_id","clearInterval","localStorage","getItem","ss_base_host","globalObject","get","concat","error","onOpenConn","instance","instances","map","i","server_type","ip","port","qr_code","createInstance","_this5","zone","constant","default_zone","checkInstance","id","instance_id","_this6","_ref4","port_status","getInstance","setQrCodeButton","connecting","openConn","_this7","stop_ping_google","_ref5","check_result","delay","pingGoogle","_this8","checked","rep","j","delQrCodeButton","closeConn","_this9","encodeURIComponent","_ref6","_this10","delete","_ref7","_this11","onCloseConn","Logs","logs","web_sock","WebSocket","onmessage","event","toConsumableArray","close","right","rightOnClick","Setting","showActionSheet","currentId","menus","label","_this","changeIp","assertThisInitialized","removeInstance","_window$globalObject","status","access","actions","onRequestClose","e","Home","showLogoutConfirm","showSetting","showLogs","showLogin","showQrCode","bottom_show","qr_code_encode","menus_1","defaults","headers","common","Authorization","logout","base64encode","replace","removeItem","setItem","index_esm","size","color","title","buttons","src","alt","view_components_Logs","view_components_Setting","view_components_Login","components_Star","App","logging","src_view_Home","Boolean","hostname","match","interceptors","request","use","url","base_api_url","indexOf","Promise","reject","response","message","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26946a1c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport \"./Login.css\"\nimport {\n    Button,\n    PopupHeader,\n    CellHeader,\n    CellBody,\n    CellFooter,\n    Form,\n    FormCell,\n    Input,\n    Label,\n    Toptips,\n    Toast\n} from 'react-weui';\n\nfunction validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\nclass Login extends Component {\n    state = {\n        email: '',\n        code:\"\",\n        showCaptchaInput:false,\n        showToast: false,\n        tips:{\n            visible:false,\n            msg:\"\",\n            type:\"warn\"\n        },\n        sendTxt:\"Send\",\n        sendBtnDisabled:false\n    };\n    showTips(msg,type =\"warn\"){\n        const {tips} = this.state;\n        tips.msg = msg;\n        tips.type = type;\n        tips.visible = true;\n        this.setState({tips})\n        setTimeout(()=>{\n            tips.visible = false;\n            this.setState({tips})\n        },1400)\n    }\n    onSendCapthca(){\n        if (!validateEmail(this.state.email)) {\n            return this.showTips(\"invalid email\")\n        }\n        this.setState({\n            showToast:true\n        },()=>{\n            axios.post(\"/auth/email/captcha\", {\n                email: this.state.email\n            }).then(({data}) => {\n                const {code, msg} = data\n                if (code === 200) {\n                    this.setState({\n                        sendBtnDisabled:true,\n                        showCaptchaInput:true,\n                        sendTxt:\"60\"\n                    })\n                    setInterval(()=>{\n                        let {sendTxt} = this.state;\n                        sendTxt = parseInt(sendTxt) -1;\n                        if(sendTxt <= 0){\n                            this.setState({\n                                sendTxt:\"Send\",\n                                sendBtnDisabled:false\n                            })\n                        }else{\n                            this.setState({\n                                sendTxt\n                            })\n                        }\n\n                    },1000)\n                } else {\n                    this.showTips(msg)\n                }\n\n                this.setState({showToast:false})\n            })\n        })\n    }\n    onChangeInput(key,{target}){\n        const state = {};\n        state[key] = target.value;\n        this.setState({...state})\n    }\n    onLogin(){\n        if(this.state.code.length === 0){\n            return this.showTips(\"请先发送验证码\")\n        }\n\n        this.setState({showToast: true})\n        axios.post(\"/auth/email/captcha/verify\", {\n            email: this.state.email,\n            code: this.state.code,\n        }).then(({data}) => {\n            const {code, body, msg} = data\n            if (code === 200) {\n                console.log(body)\n                const {access_token} = body\n                this.setState({showToast: false},()=>{\n                    this.props.loginOk(access_token)\n                    window.location.reload()\n                })\n            } else {\n                this.showTips(msg)\n\n                this.setState({showToast: false})\n            }\n        })\n    }\n    componentDidMount() {\n\n    }\n\n    render() {\n        return(\n            <div className={\"Login\"} style={{height: '100vh', overflow: 'scroll'}}>\n                <PopupHeader left={\"Close\"} leftOnClick={this.props.toggle.bind(this,\"showLogin\")}/>\n                <Form>\n                    <FormCell vcode>\n                        <CellHeader >\n                            <Label style={{with:20}}>Email:</Label>\n                        </CellHeader>\n                        <CellBody>\n                            <Input onChange={this.onChangeInput.bind(this,\"email\")} value={this.state.email} type=\"tel\" placeholder=\"Enter your Email #\"/>\n                        </CellBody>\n                        <CellFooter>\n                            {\n                                this.state.sendBtnDisabled ?\n                                    <Button type={\"default\"} disabled>{this.state.sendTxt}</Button>:\n                                    <Button onClick={this.onSendCapthca.bind(this)} type=\"vcode\">{this.state.sendTxt}</Button>\n                            }\n                        </CellFooter>\n                    </FormCell>\n                    {\n                        this.state.showCaptchaInput &&\n                        <FormCell>\n                            <CellHeader >\n                                <Label style={{with:20}}>Code:</Label>\n                            </CellHeader>\n                            <CellBody>\n                                <Input onChange={this.onChangeInput.bind(this,\"code\")} value={this.state.code} type=\"email\"/>\n                            </CellBody>\n                        </FormCell>\n                    }\n                </Form>\n                <div style={{padding:8,marginTop:16}}>\n                    <Button onClick={this.onLogin.bind(this)}>Login</Button>\n                </div>\n                <Toast icon=\"loading\" show={this.state.showToast}>Loading</Toast>\n                <Toptips type={this.state.tips.type} show={this.state.tips.visible}>{this.state.tips.msg} </Toptips>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport axios from \"axios\";\nimport {Toast, Toptips} from \"react-weui\";\nwindow.connect_status = \"disconnected\";\n\nclass Star extends Component {\n    state = {\n        showToast: false,\n        tips: {\n            visible: false,\n            msg: \"\",\n            type: \"warn\"\n        },\n        star_css: \"star_off\",\n        tipTxt: null\n\n    };\n\n    showTips(msg, type = \"warn\") {\n        const {tips} = this.state;\n        tips.msg = msg;\n        tips.type = type;\n        tips.visible = true;\n        this.setState({tips})\n        setTimeout(() => {\n            tips.visible = false;\n            this.setState({tips})\n        }, 1400)\n    }\n\n    componentDidMount() {\n        console.log(\"checkShadowSocksStatus\")\n        this.checkShadowSocksStatus()\n    }\n\n    componentWillUnmount() {\n        window.connecting_time_id && clearInterval(window.connecting_time_id)\n    }\n\n    checkShadowSocksStatus() {\n        const access_token = localStorage.getItem(\"access_token\");\n        if (!access_token) return;\n        const {ss_base_host} = window.globalObject;\n        //console.log(\"checkShadowSocksStatus\")\n        axios.get(`http://${ss_base_host}/shadowsocks`).then(({data}) => {\n            const {error, body, msg} = data;\n            console.log(error,msg)\n            if (error === 0) {\n                console.log(\"get shadowsocks setting\", body)\n                this.onOpenConn()\n            } else {\n                this.showTips(msg)\n                console.log(\"get shadowsocks error\", msg)\n            }\n        })\n    }\n\n    getInstance() {\n        window.globalObject.instance = undefined;\n        this.setState({\n            showToast: true\n        })\n        console.log(\"getInstance from list\")\n        axios.get(`/compute/list`).then(({data}) => {\n            const {body} = data;\n            window.globalObject.instances = body;\n            body.map((instance, i) => {\n                console.log(instance)\n                if (instance.server_type === \"ss\") {\n                    window.globalObject.instance = instance;\n                }\n                return instance\n            });\n            if (window.globalObject.instance) {\n                this.setState({\n                    showToast: false\n                })\n                const {instance} = window.globalObject\n                console.log(`list is find onOpenConn`,instance.ip,instance.port,instance.qr_code)\n                setTimeout(()=>{\n                    this.onOpenConn()\n                },1000)\n            } else {\n                console.log(\"createInstance because list is empty\")\n                this.createInstance()\n            }\n        })\n    }\n\n    createInstance(server_type = \"ss\") {\n        const zone = window.globalObject.constant.default_zone;\n        axios.post(`/compute/create/${zone}/${server_type}`).then(({data}) => {\n            const {body} = data;\n            window.globalObject.instance = body;\n            this.checkInstance(body.id)\n        })\n    }\n\n    checkInstance(instance_id) {\n        axios.get(`/compute/${instance_id}`).then(({data}) => {\n            const {body} = data;\n            window.globalObject.instance = body;\n            if (body.port_status === \"UP\") {\n                this.setState({\n                    showToast: false\n                })\n                this.onOpenConn()\n            } else {\n                setTimeout(()=>{\n                    this.checkInstance(body.id)\n                },1000)\n            }\n        })\n    }\n\n    onOpenConn() {\n        console.log(\"onOpenConn\")\n        const access_token = localStorage.getItem(\"access_token\");\n        if (!access_token) {\n            return this.props.toggle(\"showLogin\")\n        }\n        const {instance} = window.globalObject;\n        if (!instance || !instance.qr_code) {\n            console.log(\"qr_code is null\")\n            return this.getInstance()\n        }\n        //const qr_code = \"ss://aes-256-cfb:2584d3@35.241.81.143:8108\";\n        const qr_code = instance.qr_code;\n        this.props.setQrCodeButton(qr_code)\n        window.connect_status = \"connecting\";\n        this.setState({\n            star_css: \"star_on_1\",\n            tipTxt:\"Connecting\"\n        })\n        this.timeout = 1400;\n        this.connecting();\n        this.openConn(qr_code)\n    }\n\n    timeout = 1400\n\n    pingGoogle() {\n        if( window.stop_ping_google) return;\n        const {ss_base_host} = window.globalObject;\n        axios.get(`http://${ss_base_host}/check-port?Ip=www.google.com&Port=443`).then(({data}) => {\n            console.log(\"check-port\", this.timeout, data)\n            if (window.connect_status === \"disconnected\") return\n\n            const {body} = data;\n            if (body.check_result) {\n                console.log(\"delay\", body.delay)\n                this.setState({\n                    star_css: \"star_on_2\",\n                    tipTxt:`${body.delay} ms`\n                })\n                window.connect_status = \"connected\"\n                clearInterval(window.connecting_time_id)\n            } else {\n                console.log(\"check_result\", body.check_result)\n                window.connect_status = \"connecting\";\n                this.connecting()\n            }\n            if (this.timeout > 20000) this.timeout = 1400\n            this.timeout += 1000\n            setTimeout(() => {\n                if (window.connect_status !== \"disconnected\") this.pingGoogle()\n            }, this.timeout)\n        })\n    }\n\n    connecting() {\n        let i = 0;\n        this.setState({\n            star_css: \"star_on_0\",\n            checked: true\n        });\n\n        let timeout = 1400\n        window.connecting_time_id && clearInterval(window.connecting_time_id)\n        window.connecting_time_id = setInterval(() => {\n            i++;\n            const j = ((i) % 3);\n            var rep;\n            switch (j) {\n                case 0:\n                    rep = \"..\";\n                    break;\n                case 1:\n                    rep = \"...\";\n                    break;\n                case 2:\n                    rep = \".\";\n                    break;\n                default:\n                    break;\n            }\n            console.log(rep)\n            this.setState({\n                star_css: \"star_on_\" + j,\n                tipTxt: \"Connecting\" + rep\n            })\n            if (window.connect_status === \"disconnected\") {\n                this.setState({\n                    star_css: \"star_off\"\n                })\n            }\n        }, timeout)\n    }\n\n    onCloseConn() {\n        window.connect_status = \"disconnected\"\n        window.connecting_time_id && clearInterval(window.connecting_time_id)\n        this.setState({\n            star_css: \"star_off\",\n            tipTxt:\"Disconnected\"\n        })\n        this.props.delQrCodeButton();\n        const {instance} = window.globalObject;\n        if (!instance || !instance.qr_code) {\n            return\n        }\n        this.closeConn(instance.qr_code)\n    }\n\n    openConn(qr_code) {\n        const {ss_base_host} = window.globalObject;\n        axios.post(\n            `http://${ss_base_host}/shadowsocks?clean=1&ss=` + encodeURIComponent(qr_code),\n            null\n        ).then(({data}) => {\n            const {error, msg} = data;\n            if (error === 0) {\n                console.log(\"onOpenConn shadowsocks setting\", data.body)\n                window.stop_ping_google = false\n                this.pingGoogle();\n            } else {\n                this.showTips(msg)\n                console.log(\"onOpenConn shadowsocks error\", msg)\n            }\n        })\n    }\n\n    closeConn(qr_code) {\n        const {ss_base_host} = window.globalObject;\n        window.stop_ping_google = true\n        axios.delete(\n            `http://${ss_base_host}/shadowsocks?ss=` + encodeURIComponent(qr_code),\n            null\n        ).then(({data}) => {\n            const {error, msg} = data;\n            if (error === 0) {\n                console.log(\"onCloseConn shadowsocks setting\", data.body)\n            } else {\n                this.showTips(msg)\n                console.log(\"onCloseConn shadowsocks error\", msg)\n            }\n        })\n    }\n\n    render() {\n        const {star_css} = this.state;\n        return (\n            <div className={\"star_wrap\"}>\n                <div className=\"starStatusTxtWrap\">\n                    {\n                        this.state.tipTxt &&  <div className=\"starStatusTxt\">{this.state.tipTxt}</div>\n                    }\n\n                </div>\n                <div onClick={() => {\n                    const {connect_status} = window;\n                    if (connect_status === 'disconnected') {\n                        this.onOpenConn()\n                    } else {\n                        this.onCloseConn()\n                    }\n\n                }} className={\"star \" + star_css}/>\n                <Toast icon=\"loading\" show={this.state.showToast}>Loading</Toast>\n                <Toptips type={this.state.tips.type} show={this.state.tips.visible}>{this.state.tips.msg} </Toptips>\n            </div>\n        )\n    }\n}\n\nexport default Star;\n","import React, {Component} from 'react';\nimport \"./Logs.css\"\nimport {\n    PopupHeader,\n} from 'react-weui';\n\n\nclass Logs extends Component {\n    state = {\n        logs:[]\n    };\n    componentDidMount() {\n        const {ss_base_host} = window.globalObject;\n        window.web_sock = new WebSocket(`ws://${ss_base_host}/ws`);\n\n        var update = () => {\n            window.web_sock.onmessage = (event) =>{\n                //console.log(event.data)\n                this.setState({\n                    logs:[event.data,...this.state.logs]\n                })\n            }\n        };\n        window.setTimeout(update);\n    }\n\n    componentWillUnmount() {\n        window.web_sock && window.web_sock.close();\n        window.web_sock = undefined\n    }\n\n    render() {\n        return(\n            <div className={\"Logs\"} style={{height: '90vh', overflow: 'scroll'}}>\n                <PopupHeader right={\"Close\"} rightOnClick={this.props.toggle.bind(this,\"showLogs\")}/>\n                <ul>\n                    {\n                        this.state.logs.map((log,i)=>{\n                            return(\n                                <li key={i}>{log}</li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Logs;\n","import React, {Component} from 'react';\nimport \"./Setting.css\"\nimport {ActionSheet, Cell, CellBody, CellFooter, Cells, PopupHeader, Toast} from 'react-weui';\nimport axios from \"axios\";\n\n\nclass Setting extends Component {\n    state = {\n        instances: [],\n        showToast: false,\n        showActionSheet: false,\n        currentId: null,\n        menus: [\n            {\n                label: 'Change IP',\n                onClick: this.changeIp.bind(this)\n            },\n            // {\n            //     label: 'Change Zone',\n            //     onClick: ()=>{}\n            // }\n        ]\n    };\n\n    changeIp() {\n        window.stop_ping_google = true;\n        this.setState({\n            showToast: true,\n            showActionSheet: false\n        })\n        this.removeInstance(this.state.currentId)\n    }\n\n    removeInstance(instance_id) {\n\n        const {ss_base_host, instance} = window.globalObject;\n        window.connecting_time_id && clearInterval(window.connecting_time_id)\n        window.connect_status = \"disconnected\"\n        window.stop_ping_google = true;\n        window.globalObject.instance = undefined;\n\n        axios.delete(\n            `http://${ss_base_host}/shadowsocks?ss=` + encodeURIComponent(instance.qr_code),\n            null\n        ).then(({data}) => {\n            const {error} = data;\n            console.log(data)\n            if (error === 0) {\n\n                axios.delete(`/compute/remove/${instance_id}`).then(({data}) => {\n                    console.log(\"removed\", instance_id)\n                    this.createInstance()\n                })\n            }\n        })\n\n\n    }\n\n    createInstance(server_type = \"ss\") {\n        const zone = window.globalObject.constant.default_zone;\n        axios.post(`/compute/create/${zone}/${server_type}`).then(({data}) => {\n            const {body} = data;\n            window.globalObject.instance = body;\n            window.globalObject.instances = [body];\n            this.setState({\n                instances: [body]\n            })\n            console.log(\"createInstance\", body)\n            this.checkInstance(body.id)\n        })\n    }\n\n    checkInstance(instance_id) {\n        axios.get(`/compute/${instance_id}`).then(({data}) => {\n            const {body} = data;\n            window.globalObject.instance = body;\n            window.globalObject.instances = [body];\n            this.setState({\n                instances: [body]\n            })\n            if (body.ip) {\n                console.log(\"get ip\", body.ip)\n                return window.location.reload();\n            }\n            if (body.port_status === \"UP\") {\n                this.setState({\n                    showToast: false\n                })\n                console.log(\"up\", body)\n            } else {\n                setTimeout(() => {\n                    this.checkInstance(body.id)\n                }, 1000)\n            }\n        })\n    }\n\n    componentDidMount() {\n        const access_token = localStorage.getItem(\"access_token\");\n        if (access_token) {\n            if (!window.globalObject.instances) {\n                axios.get(`/compute/list`).then(({data}) => {\n                    const {body} = data;\n                    window.globalObject.instances = body;\n                    this.setState({\n                        instances: body\n                    })\n                })\n            } else {\n                this.setState({\n                    instances: window.globalObject.instances\n                })\n            }\n        }\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    render() {\n        const {instances} = this.state;\n        return (\n            <div className={\"Setting\"} style={{height: '100vh', overflow: 'scroll'}}>\n                <PopupHeader right={\"Close\"} rightOnClick={this.props.toggle.bind(this, \"showSetting\")}/>\n                <div>\n                    <Cells>\n                        {instances.map(({ip, id, port, zone, status, port_status}, i) => {\n                            return (\n                                <Cell onClick={() => {\n\n                                    this.setState({\n                                        showActionSheet: true,\n                                        currentId: id\n                                    })\n\n                                }}  key={i} access>\n                                    <CellBody>\n                                        {ip} : {port}\n                                    </CellBody>\n                                    <CellFooter>\n                                        {zone}\n                                    </CellFooter>\n                                </Cell>\n                            )\n                        })}\n                    </Cells>\n                </div>\n                <ActionSheet\n                    menus={this.state.menus}\n                    actions={[]}\n                    show={this.state.showActionSheet}\n                    onRequestClose={e => this.setState({showActionSheet: !this.state.showActionSheet})}\n                />\n                <Toast icon=\"loading\" show={this.state.showToast}>Loading</Toast>\n            </div>\n        )\n    }\n}\n\nexport default Setting;\n","import React, {Component} from 'react';\nimport './Home.css';\nimport {ActionSheet, Dialog, Popup, Toast} from 'react-weui';\n\nimport {FaBars} from 'react-icons/fa';\nimport Login from './components/Login';\nimport Star from './components/Star';\nimport Logs from './components/Logs';\nimport Setting from './components/Setting';\nimport axios from \"axios\";\nimport {base64encode} from \"nodejs-base64\";\n\nclass Home extends Component {\n    state = {\n        access_token:null,\n        showLogoutConfirm:false,\n        showSetting: false,\n        showLogs: false,\n        showLogin:false,\n        showQrCode: false,\n        showActionSheet: false,\n        bottom_show: false,\n        showToast: false,\n        star_css: \"star_on_0\",\n        show: false,\n        qr_code_encode:\"\",\n        menus_1:[\n            {\n                label: 'Setting',\n                onClick: this.showSetting.bind(this)\n            },{\n                label: 'Logs',\n                onClick: this.showLogs.bind(this)\n            },\n        ],\n        menus: [],\n        actions: []\n    };\n\n    componentDidMount() {\n        const access_token = localStorage.getItem(\"access_token\");\n        this.setState({\n            access_token,\n            //showLogin: !access_token\n        })\n        if (access_token) {\n            axios.defaults.headers.common.Authorization = access_token;\n            this.setState({\n                menus:this.state.menus_1,\n                actions:[\n                    {\n                        label: 'Logout',\n                        onClick: this.logout.bind(this)\n                    }\n                ]\n            })\n        }else{\n            this.setState({\n                menus:[],\n                actions:[\n                    {\n                        label: 'Login',\n                        onClick: ()=>{\n                            this.toggle(\"showActionSheet\")\n                            this.toggle(\"showLogin\")\n                        }\n                    }\n                ]\n            })\n        }\n    }\n\n    showQrCode() {\n        //const qr_code = \"ss://aes-256-cfb:2584d3@35.241.81.143:8108\";\n        const qr_code = this.state.qr_code;\n        const qr_code_encode = \"ss://\" + base64encode(qr_code.replace(\"ss://\", \"\"))\n        this.setState({qr_code_encode})\n        this.toggle(\"showActionSheet\")\n        this.toggle(\"showQrCode\")\n    }\n    showSetting() {\n        this.toggle(\"showActionSheet\")\n        this.toggle(\"showSetting\")\n    }\n    showLogs() {\n        this.toggle(\"showActionSheet\")\n        this.toggle(\"showLogs\")\n    }\n\n    logout() {\n        localStorage.removeItem(\"access_token\");\n        this.setState({\n            showActionSheet: false,\n            access_token:null,\n            showLogin:true,\n            showLogoutConfirm:false\n        },()=>{\n            window.location.reload()\n        })\n    }\n    delQrCodeButton(){\n        this.setState({\n            menus:this.state.menus_1,\n            qr_code:null\n        })\n    }\n    setQrCodeButton(qr_code){\n        this.setState({\n            menus:[\n                {\n                    label: 'QrCode',\n                    onClick: this.showQrCode.bind(this)\n                },\n                ...this.state.menus_1\n            ],\n            qr_code\n        })\n    }\n    toggle(key) {\n        const state = {};\n        state[key] = !this.state[key];\n        this.setState({\n            ...state\n        })\n    }\n    loginOk(access_token){\n        this.setState({\n            access_token\n        },()=>{\n            localStorage.setItem(\"access_token\", access_token)\n            this.toggle(\"showLogin\")\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <div className={\"setting\"} onClick={this.toggle.bind(this, \"showActionSheet\")}>\n                    <FaBars size={\"1.5em\"} color={\"white\"}/>\n                </div>\n\n                <Dialog type=\"ios\" title={\"\"}\n                        buttons={[{\n                            label: 'Ok',\n                            onClick: this.toggle.bind(this, \"showQrCode\")\n                        }]} show={this.state.showQrCode}>\n                    <div style={{height:154}}>\n                        {\n                            this.state.showQrCode && <img src={\"https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\"+this.state.qr_code_encode} alt=\"\"/>\n                        }\n                    </div>\n                </Dialog>\n                <Popup show={this.state.showLogs}\n                       onRequestClose={e => this.toggle(\"showLogs\")}>\n                    <Logs toggle={this.toggle.bind(this)}/>\n                </Popup>\n                <Popup show={this.state.showSetting}\n                       onRequestClose={e => this.toggle(\"showSetting\")}>\n                    <Setting visible={this.state.showSetting} toggle={this.toggle.bind(this)}/>\n                </Popup>\n                <Popup show={this.state.showLogin}\n                       onRequestClose={e => this.toggle(\"showLogin\")}>\n                    <Login loginOk={this.loginOk.bind(this)} toggle={this.toggle.bind(this)}/>\n                </Popup>\n                <ActionSheet\n                    menus={this.state.menus}\n                    actions={this.state.actions}\n                    show={this.state.showActionSheet}\n                    onRequestClose={e => this.setState({showActionSheet: !this.state.showActionSheet})}\n                />\n                <Toast icon=\"loading\" show={this.state.showToast}>Loading</Toast>\n                <Star\n                    delQrCodeButton={this.delQrCodeButton.bind(this)}\n                    setQrCodeButton={this.setQrCodeButton.bind(this)}\n                    toggle={this.toggle.bind(this)} />\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, {Component} from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Home from './view/Home'\nimport {Toast} from 'react-weui';\n\nclass App extends Component {\n    state = {\n        logging:true\n    }\n\n    componentDidMount() {\n        const access_token = localStorage.getItem(\"access_token\");\n        if (access_token) {\n            axios.defaults.headers.common.Authorization = access_token;\n        }\n        axios.get(\"/constant\").then(({data})=>{\n            window.globalObject.constant = data\n            this.setState({\n                logging:false\n            })\n        })\n\n    }\n\n    render() {\n        //console.log(this.state.logging,window.globalObject.constant)\n        return (\n            <div className=\"App\">\n                {\n                    !this.state.logging && <Home />\n                }\n                <Toast icon=\"loading\" show={this.state.logging}>Loading</Toast>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from \"axios\";\nimport 'weui';\nimport 'react-weui/build/packages/react-weui.css';\n\n\naxios.interceptors.request.use(request => {\n    const {url} = request;\n    //window.base_api_url = \"http://localhost:8080/api\";\n    const {base_api_url} = window.globalObject;\n    if ( url && url.indexOf(\"http\") === -1) {\n        request[\"url\"] = `${base_api_url}${url}`\n    }\n    return request\n}, error => {\n    console.error(\"request\",error);\n    return Promise.reject(error);\n})\n\naxios.interceptors.response.use((response) => {\n    //console.log(response)\n    return response;\n}, error => {\n    console.error(\"response\",error.message);\n    if(error.message.indexOf(\"401\") > 0){\n        localStorage.removeItem(\"access_token\")\n        window.location.reload()\n    }else{\n        return Promise.reject(error);\n    }\n});\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}